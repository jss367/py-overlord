from typing import Type

from dominion.cards.base_card import Card
from dominion.cards.base_set import (
    Chapel,
    CouncilRoom,
    Festival,
    Laboratory,
    Market,
    Mine,
    Moat,
    Smithy,
    Village,
    Witch,
    Workshop,
)
from dominion.cards.expansions import (
    Beggar,
    Collection,
    Emporium,
    Forager,
    Miser,
    Modify,
    Patrician,
    Rats,
    Rebuild,
    Crypt,
    Skulk,
    SnowyVillage,
    Hovel,
    Necropolis,
    OvergrownEstate,
    Bank,
    Bishop,
    City,
    Contraband,
    CountingHouse,
    Expand,
    Forge,
    Goons,
    GrandMarket,
    Hoard,
    KingsCourt,
    Loan,
    Mint,
    Monument,
    Mountebank,
    Peddler,
    Quarry,
    Rabble,
    RoyalSeal,
    Talisman,
    TradeRoute,
    Vault,
    Venture,
    Watchtower,
    WorkersVillage,
    Platinum,
    Colony,
    Amphora,
    Doubloons,
    EndlessChalice,
    Figurehead,
    Hammer,
    Insignia,
    Jewels,
    Orb,
    PrizeGoat,
    PuzzleBox,
    Sextant,
    Shield,
    SpellScroll,
    Staff,
    Sword,
)
from dominion.cards.hinterlands import Trail, Trader, Inn, Mill
from dominion.cards.renaissance import ActingTroupe
from dominion.cards.allies import Taskmaster
from dominion.cards.intrigue import Torturer, Patrol, Bridge, Nobles
from dominion.cards.plunder import FirstMate, Barbarian
from dominion.cards.dark_ages import Ironmonger, Marauder, Spoils, Ruins
from dominion.cards.adventures import Giant
from dominion.cards.nocturne import TragicHero

from dominion.cards.treasures import Copper, Gold, Silver
from dominion.cards.victory import Curse, Duchy, Estate, Province

# Updated registry of all card types
CARD_TYPES: dict[str, Type[Card]] = {
    # Treasure cards
    "Copper": Copper,
    "Silver": Silver,
    "Gold": Gold,
    # Victory cards
    "Estate": Estate,
    "Duchy": Duchy,
    "Province": Province,
    "Curse": Curse,
    # Action cards
    "Village": Village,
    "Smithy": Smithy,
    "Market": Market,
    "Festival": Festival,
    "Laboratory": Laboratory,
    "Mine": Mine,
    "Witch": Witch,
    "Moat": Moat,
    "Workshop": Workshop,
    "Chapel": Chapel,
    "Council Room": CouncilRoom,
    # Expansion cards
    "Patrician": Patrician,
    "Emporium": Emporium,
    "Forager": Forager,
    "Snowy Village": SnowyVillage,
    "Miser": Miser,
    "Rats": Rats,
    "Skulk": Skulk,
    "Collection": Collection,
    "Beggar": Beggar,
    "Modify": Modify,
    "Rebuild": Rebuild,
    "Crypt": Crypt,
    "Hovel": Hovel,
    "Necropolis": Necropolis,
    "Overgrown Estate": OvergrownEstate,
    "Bank": Bank,
    "Bishop": Bishop,
    "City": City,
    "Contraband": Contraband,
    "Counting House": CountingHouse,
    "Expand": Expand,
    "Forge": Forge,
    "Goons": Goons,
    "Grand Market": GrandMarket,
    "Hoard": Hoard,
    "King's Court": KingsCourt,
    "Loan": Loan,
    "Mint": Mint,
    "Monument": Monument,
    "Mountebank": Mountebank,
    "Peddler": Peddler,
    "Quarry": Quarry,
    "Rabble": Rabble,
    "Royal Seal": RoyalSeal,
    "Talisman": Talisman,
    "Trade Route": TradeRoute,
    "Vault": Vault,
    "Venture": Venture,
    "Watchtower": Watchtower,
    "Workers' Village": WorkersVillage,
    "Platinum": Platinum,
    "Colony": Colony,
    "Amphora": Amphora,
    "Doubloons": Doubloons,
    "Endless Chalice": EndlessChalice,
    "Figurehead": Figurehead,
    "Hammer": Hammer,
    "Insignia": Insignia,
    "Jewels": Jewels,
    "Orb": Orb,
    "Prize Goat": PrizeGoat,
    "Puzzle Box": PuzzleBox,
    "Sextant": Sextant,
    "Shield": Shield,
    "Spell Scroll": SpellScroll,
    "Staff": Staff,
    "Sword": Sword,
    "Trail": Trail,
    "Mill": Mill,
    "Acting Troupe": ActingTroupe,
    "Taskmaster": Taskmaster,
    "Trader": Trader,
    "Torturer": Torturer,
    "Patrol": Patrol,
    "Bridge": Bridge,
    "Nobles": Nobles,
    "Inn": Inn,
    "First Mate": FirstMate,
    "Barbarian": Barbarian,
    "Ironmonger": Ironmonger,
    "Marauder": Marauder,
    "Spoils": Spoils,
    "Ruins": Ruins,
    "Giant": Giant,
    "Tragic Hero": TragicHero,
}


def get_card(name: str) -> Card:
    """Get a new instance of a card by name."""
    if name not in CARD_TYPES:
        raise ValueError(f"Unknown card: {name}")
    return CARD_TYPES[name]()
